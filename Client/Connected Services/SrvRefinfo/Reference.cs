//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.SrvRefinfo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageServer", Namespace="http://schemas.datacontract.org/2004/07/WcfMessengerLibrary")]
    [System.SerializableAttribute()]
    public partial class MessageServer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextMessage {
            get {
                return this.TextMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.TextMessageField, value) != true)) {
                    this.TextMessageField = value;
                    this.RaisePropertyChanged("TextMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFrom {
            get {
                return this.UserFromField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFromField, value) != true)) {
                    this.UserFromField = value;
                    this.RaisePropertyChanged("UserFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserTo {
            get {
                return this.UserToField;
            }
            set {
                if ((object.ReferenceEquals(this.UserToField, value) != true)) {
                    this.UserToField = value;
                    this.RaisePropertyChanged("UserTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SrvRefinfo.IServiceInfo")]
    public interface IServiceInfo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/isLogExist", ReplyAction="http://tempuri.org/IServiceInfo/isLogExistResponse")]
        bool isLogExist(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/isLogExist", ReplyAction="http://tempuri.org/IServiceInfo/isLogExistResponse")]
        System.Threading.Tasks.Task<bool> isLogExistAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/isPassExist", ReplyAction="http://tempuri.org/IServiceInfo/isPassExistResponse")]
        bool isPassExist(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/isPassExist", ReplyAction="http://tempuri.org/IServiceInfo/isPassExistResponse")]
        System.Threading.Tasks.Task<bool> isPassExistAsync(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/getUserId", ReplyAction="http://tempuri.org/IServiceInfo/getUserIdResponse")]
        int getUserId(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/getUserId", ReplyAction="http://tempuri.org/IServiceInfo/getUserIdResponse")]
        System.Threading.Tasks.Task<int> getUserIdAsync(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/Registration", ReplyAction="http://tempuri.org/IServiceInfo/RegistrationResponse")]
        int Registration(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/Registration", ReplyAction="http://tempuri.org/IServiceInfo/RegistrationResponse")]
        System.Threading.Tasks.Task<int> RegistrationAsync(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/getAllUsers", ReplyAction="http://tempuri.org/IServiceInfo/getAllUsersResponse")]
        System.Collections.Generic.List<string> getAllUsers(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/getAllUsers", ReplyAction="http://tempuri.org/IServiceInfo/getAllUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> getAllUsersAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/getMessage", ReplyAction="http://tempuri.org/IServiceInfo/getMessageResponse")]
        System.Collections.Generic.List<Client.SrvRefinfo.MessageServer> getMessage(string userOwner, string userTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInfo/getMessage", ReplyAction="http://tempuri.org/IServiceInfo/getMessageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Client.SrvRefinfo.MessageServer>> getMessageAsync(string userOwner, string userTo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceInfoChannel : Client.SrvRefinfo.IServiceInfo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceInfoClient : System.ServiceModel.ClientBase<Client.SrvRefinfo.IServiceInfo>, Client.SrvRefinfo.IServiceInfo {
        
        public ServiceInfoClient() {
        }
        
        public ServiceInfoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceInfoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceInfoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceInfoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool isLogExist(string login) {
            return base.Channel.isLogExist(login);
        }
        
        public System.Threading.Tasks.Task<bool> isLogExistAsync(string login) {
            return base.Channel.isLogExistAsync(login);
        }
        
        public bool isPassExist(string login, string pass) {
            return base.Channel.isPassExist(login, pass);
        }
        
        public System.Threading.Tasks.Task<bool> isPassExistAsync(string login, string pass) {
            return base.Channel.isPassExistAsync(login, pass);
        }
        
        public int getUserId(string login, string pass) {
            return base.Channel.getUserId(login, pass);
        }
        
        public System.Threading.Tasks.Task<int> getUserIdAsync(string login, string pass) {
            return base.Channel.getUserIdAsync(login, pass);
        }
        
        public int Registration(string login, string pass) {
            return base.Channel.Registration(login, pass);
        }
        
        public System.Threading.Tasks.Task<int> RegistrationAsync(string login, string pass) {
            return base.Channel.RegistrationAsync(login, pass);
        }
        
        public System.Collections.Generic.List<string> getAllUsers(int id) {
            return base.Channel.getAllUsers(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> getAllUsersAsync(int id) {
            return base.Channel.getAllUsersAsync(id);
        }
        
        public System.Collections.Generic.List<Client.SrvRefinfo.MessageServer> getMessage(string userOwner, string userTo) {
            return base.Channel.getMessage(userOwner, userTo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Client.SrvRefinfo.MessageServer>> getMessageAsync(string userOwner, string userTo) {
            return base.Channel.getMessageAsync(userOwner, userTo);
        }
    }
}
